initSidebarItems({"fn":[["add_agents","add_agents, this method append agents for the all token"],["add_token_agents","add_agents, this method only append agents for the specified token."],["add_token_agents_inner",""],["authorize_token_template",""],["authorize_token_template_multi",""],["create_token_template",""],["delete_token",""],["generate_dtoken","generate dtoken"],["generate_dtoken_for_other",""],["generate_dtoken_multi",""],["get_admin","query admin address"],["get_agent_balance",""],["get_authorized_addr",""],["get_layer2_id","return layer2 id set before, return 0 if unset."],["get_template_id_by_token_id",""],["get_token_template",""],["invoke",""],["remove_agents","product owner remove all the agents"],["remove_authorize_addr",""],["remove_token_agents","product owner remove the agents of specified token"],["remove_token_agents_inner",""],["remove_token_template",""],["set_agents","set agents, this method will set agents more than one TokeTemplate"],["set_layer2_id","set layer2 id to enable cross layer dtoken transfer."],["set_token_agents","set token agents"],["set_token_agents_inner",""],["transfer_to_layer2","transfer dtoken to layer2."],["update_admin","update admin address"],["update_token_template",""],["use_token","use token, the buyer of the token has the right to consume the token"],["use_token_by_agent","use token by agent, the agent of the token has the right to invoke this method"],["verify_creator_sig",""],["verify_creator_sig_multi",""]],"mod":[["oep8",""]]});